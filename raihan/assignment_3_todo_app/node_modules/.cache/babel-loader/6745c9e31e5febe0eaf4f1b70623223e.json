{"ast":null,"code":"import React from 'react';\nvar styles = {\n  \"stackedBar\": \"_2SJG2\",\n  \"sectionLabel\": \"_2eP9c\",\n  \"caption\": \"_2jJU2\"\n};\n\nvar isNumber = function isNumber(data) {\n  return typeof data === \"number\";\n};\n\nvar getSectionValue = function getSectionValue(section) {\n  return isNumber(section) ? section : section.value;\n};\n\nvar getSectionColor = function getSectionColor(section) {\n  return isNumber(section) ? undefined : section.color;\n};\n\nfunction isBarDataValues(arr) {\n  if (!Array.isArray(arr)) {\n    return false;\n  }\n\n  if (!arr.every(function (elt) {\n    return typeof elt !== \"number\";\n  })) {\n    return false;\n  }\n\n  return true;\n}\n\nvar toPx = function toPx(size) {\n  if (!size) return \"0\";\n  return size + \"px\";\n};\n\nvar capitalize = function capitalize(s) {\n  if (typeof s !== \"string\") return \"\";\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nvar sumSectionArray = function sumSectionArray(sectionArray) {\n  if (sectionArray.length === 0) return 0;\n  return sectionArray.map(function (section) {\n    return getSectionValue(section);\n  }).reduce(function (a, b) {\n    return a + b;\n  });\n};\n\nfunction MonoStackedBar(_ref) {\n  var data = _ref.data,\n      _ref$colors = _ref.colors,\n      colors = _ref$colors === void 0 ? [] : _ref$colors,\n      _ref$displayLabels = _ref.displayLabels,\n      displayLabels = _ref$displayLabels === void 0 ? true : _ref$displayLabels,\n      _ref$labelColor = _ref.labelColor,\n      labelColor = _ref$labelColor === void 0 ? \"white\" : _ref$labelColor,\n      _ref$unit = _ref.unit,\n      unit = _ref$unit === void 0 ? \"\" : _ref$unit,\n      width = _ref.width,\n      _ref$height = _ref.height,\n      height = _ref$height === void 0 ? 20 : _ref$height,\n      _ref$radius = _ref.radius,\n      radius = _ref$radius === void 0 ? 10 : _ref$radius;\n  var sumValues = data.length ? data.map(function (section) {\n    return getSectionValue(section);\n  }).reduce(function (a, b) {\n    return a + b;\n  }) : 1;\n  return React.createElement(\"div\", {\n    style: {\n      maxWidth: width\n    }\n  }, React.createElement(\"div\", {\n    className: styles.stackedBar\n  }, data.length && data.map(function (section, index) {\n    var radiusPx = toPx(radius);\n    var proportion = getSectionValue(section) * 100 / sumValues;\n    return React.createElement(\"div\", {\n      key: index,\n      style: {\n        width: proportion + \"%\",\n        height: height,\n        borderRadius: data.length === 1 || proportion === 100 ? radiusPx : index === 0 || sumSectionArray(data.slice(0, index)) === 0 ? radiusPx + \" 0 0 \" + radiusPx : index === data.length - 1 || sumSectionArray(data.slice(index + 1)) === 0 ? \"0 \" + radiusPx + \" \" + radiusPx + \" 0\" : \"0\",\n        backgroundColor: getSectionColor(section) || colors[index] || \"#393986\",\n        display: \"flex\",\n        alignItems: \"center\"\n      },\n      className: styles.section\n    }, displayLabels && proportion > 10 && React.createElement(\"span\", {\n      style: {\n        fontSize: height - height / 4,\n        color: labelColor\n      },\n      className: styles.sectionLabel\n    }, \"\" + Math.round(getSectionValue(section)) + unit));\n  })), React.createElement(\"div\", {\n    className: styles.caption\n  }, isBarDataValues(data) && data.filter(function (section) {\n    return section.caption;\n  }).length > 0 && data.map(function (section, index) {\n    if (!section.caption) return React.createElement(React.Fragment, null);\n    var proportion = getSectionValue(section) * 100 / sumValues;\n    if (proportion < 10) return React.createElement(React.Fragment, null);\n    return React.createElement(\"div\", {\n      key: index,\n      style: {\n        width: proportion + \"%\",\n        fontSize: height - height / 3\n      }\n    }, capitalize(section.caption));\n  })));\n}\n\nexport default MonoStackedBar;","map":{"version":3,"mappings":"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","names":["React","styles","isNumber","data","getSectionValue","section","value","getSectionColor","undefined","color","isBarDataValues","arr","Array","isArray","every","elt","toPx","size","capitalize","s","charAt","toUpperCase","slice","sumSectionArray","sectionArray","length","map","reduce","a","b","MonoStackedBar","_ref","_ref$colors","colors","_ref$displayLabels","displayLabels","_ref$labelColor","labelColor","_ref$unit","unit","width","_ref$height","height","_ref$radius","radius","sumValues","createElement","style","maxWidth","className","stackedBar","index","radiusPx","proportion","key","borderRadius","backgroundColor","display","alignItems","fontSize","sectionLabel","Math","round","caption","filter","Fragment"],"sources":["C:/xampp/htdocs/portfolio_react_assignment2/node_modules/mono-stacked-bar/dist/index.modern.js"],"sourcesContent":["import React from 'react';\n\nvar styles = {\"stackedBar\":\"_2SJG2\",\"sectionLabel\":\"_2eP9c\",\"caption\":\"_2jJU2\"};\n\nvar isNumber = function isNumber(data) {\n  return typeof data === \"number\";\n};\n\nvar getSectionValue = function getSectionValue(section) {\n  return isNumber(section) ? section : section.value;\n};\n\nvar getSectionColor = function getSectionColor(section) {\n  return isNumber(section) ? undefined : section.color;\n};\n\nfunction isBarDataValues(arr) {\n  if (!Array.isArray(arr)) {\n    return false;\n  }\n\n  if (!arr.every(function (elt) {\n    return typeof elt !== \"number\";\n  })) {\n    return false;\n  }\n\n  return true;\n}\n\nvar toPx = function toPx(size) {\n  if (!size) return \"0\";\n  return size + \"px\";\n};\n\nvar capitalize = function capitalize(s) {\n  if (typeof s !== \"string\") return \"\";\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nvar sumSectionArray = function sumSectionArray(sectionArray) {\n  if (sectionArray.length === 0) return 0;\n  return sectionArray.map(function (section) {\n    return getSectionValue(section);\n  }).reduce(function (a, b) {\n    return a + b;\n  });\n};\n\nfunction MonoStackedBar(_ref) {\n  var data = _ref.data,\n      _ref$colors = _ref.colors,\n      colors = _ref$colors === void 0 ? [] : _ref$colors,\n      _ref$displayLabels = _ref.displayLabels,\n      displayLabels = _ref$displayLabels === void 0 ? true : _ref$displayLabels,\n      _ref$labelColor = _ref.labelColor,\n      labelColor = _ref$labelColor === void 0 ? \"white\" : _ref$labelColor,\n      _ref$unit = _ref.unit,\n      unit = _ref$unit === void 0 ? \"\" : _ref$unit,\n      width = _ref.width,\n      _ref$height = _ref.height,\n      height = _ref$height === void 0 ? 20 : _ref$height,\n      _ref$radius = _ref.radius,\n      radius = _ref$radius === void 0 ? 10 : _ref$radius;\n  var sumValues = data.length ? data.map(function (section) {\n    return getSectionValue(section);\n  }).reduce(function (a, b) {\n    return a + b;\n  }) : 1;\n  return React.createElement(\"div\", {\n    style: {\n      maxWidth: width\n    }\n  }, React.createElement(\"div\", {\n    className: styles.stackedBar\n  }, data.length && data.map(function (section, index) {\n    var radiusPx = toPx(radius);\n    var proportion = getSectionValue(section) * 100 / sumValues;\n    return React.createElement(\"div\", {\n      key: index,\n      style: {\n        width: proportion + \"%\",\n        height: height,\n        borderRadius: data.length === 1 || proportion === 100 ? radiusPx : index === 0 || sumSectionArray(data.slice(0, index)) === 0 ? radiusPx + \" 0 0 \" + radiusPx : index === data.length - 1 || sumSectionArray(data.slice(index + 1)) === 0 ? \"0 \" + radiusPx + \" \" + radiusPx + \" 0\" : \"0\",\n        backgroundColor: getSectionColor(section) || colors[index] || \"#393986\",\n        display: \"flex\",\n        alignItems: \"center\"\n      },\n      className: styles.section\n    }, displayLabels && proportion > 10 && React.createElement(\"span\", {\n      style: {\n        fontSize: height - height / 4,\n        color: labelColor\n      },\n      className: styles.sectionLabel\n    }, \"\" + Math.round(getSectionValue(section)) + unit));\n  })), React.createElement(\"div\", {\n    className: styles.caption\n  }, isBarDataValues(data) && data.filter(function (section) {\n    return section.caption;\n  }).length > 0 && data.map(function (section, index) {\n    if (!section.caption) return React.createElement(React.Fragment, null);\n    var proportion = getSectionValue(section) * 100 / sumValues;\n    if (proportion < 10) return React.createElement(React.Fragment, null);\n    return React.createElement(\"div\", {\n      key: index,\n      style: {\n        width: proportion + \"%\",\n        fontSize: height - height / 3\n      }\n    }, capitalize(section.caption));\n  })));\n}\n\nexport default MonoStackedBar;\n"]},"metadata":{},"sourceType":"module"}
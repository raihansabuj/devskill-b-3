{"version":3,"file":"index.js","sources":["../src/index.tsx"],"sourcesContent":["import React from \"react\"\nimport styles from \"./styles.module.css\"\n\ninterface BarData {\n  value: number\n  color?: string\n  caption?: string\n}\n\ninterface MonoStackedBarProps {\n  data: (number | BarData)[]\n  colors?: string[]\n  displayLabels?: boolean\n  labelColor?: string\n  unit?: string\n  width?: number\n  height?: number\n  radius?: number\n}\n\nconst isNumber = (data: number | BarData): boolean => {\n  return typeof data === \"number\"\n}\n\nconst getSectionValue = (section: number | BarData): number => {\n  return isNumber(section) ? (section as number) : (section as BarData).value\n}\n\nconst getSectionColor = (section: number | BarData): string | undefined => {\n  return isNumber(section) ? undefined : (section as BarData).color\n}\n\nfunction isBarDataValues<BarData>(arr: (number | BarData)[]): arr is BarData[] {\n  if (!Array.isArray(arr)) {\n    return false\n  }\n  if (!arr.every((elt: number | BarData) => typeof elt !== \"number\")) {\n    return false\n  }\n  return true\n}\n\nconst toPx = (size: number | undefined): string | undefined => {\n  if (!size) return \"0\"\n  return `${size}px`\n}\n\nconst capitalize = (s: string): string => {\n  if (typeof s !== \"string\") return \"\"\n  return s.charAt(0).toUpperCase() + s.slice(1)\n}\n\nconst sumSectionArray = (sectionArray: (number | BarData)[]): number => {\n  if (sectionArray.length === 0) return 0\n  return sectionArray\n    .map((section) => getSectionValue(section))\n    .reduce((a, b) => a + b)\n}\n\nexport default function MonoStackedBar({\n  data,\n  colors = [],\n  displayLabels = true,\n  labelColor = \"white\",\n  unit = \"\",\n  width,\n  height = 20,\n  radius = 10\n}: MonoStackedBarProps): JSX.Element {\n  const sumValues = data.length\n    ? data.map((section) => getSectionValue(section)).reduce((a, b) => a + b)\n    : 1\n\n  return (\n    <div\n      style={{\n        maxWidth: width\n      }}\n    >\n      <div className={styles.stackedBar}>\n        {data.length &&\n          data.map((section, index) => {\n            const radiusPx = toPx(radius)\n            const proportion = (getSectionValue(section) * 100) / sumValues\n            return (\n              <div\n                key={index}\n                style={{\n                  width: `${proportion}%`,\n                  height: height,\n                  borderRadius:\n                    data.length === 1 || proportion === 100\n                      ? radiusPx\n                      : index === 0 ||\n                        sumSectionArray(data.slice(0, index)) === 0\n                      ? `${radiusPx} 0 0 ${radiusPx}`\n                      : index === data.length - 1 ||\n                        sumSectionArray(data.slice(index + 1)) === 0\n                      ? `0 ${radiusPx} ${radiusPx} 0`\n                      : \"0\",\n                  backgroundColor:\n                    getSectionColor(section) || colors[index] || \"#393986\",\n                  display: \"flex\",\n                  alignItems: \"center\"\n                }}\n                className={styles.section}\n              >\n                {displayLabels && proportion > 10 && (\n                  <span\n                    style={{\n                      fontSize: height - height / 4,\n                      color: labelColor\n                    }}\n                    className={styles.sectionLabel}\n                  >\n                    {`${Math.round(getSectionValue(section))}${unit}`}\n                  </span>\n                )}\n              </div>\n            )\n          })}\n      </div>\n      <div className={styles.caption}>\n        {isBarDataValues(data) &&\n          data.filter((section) => section.caption).length > 0 &&\n          data.map((section, index) => {\n            if (!section.caption) return <React.Fragment />\n            const proportion = (getSectionValue(section) * 100) / sumValues\n            if (proportion < 10) return <React.Fragment />\n            return (\n              <div\n                key={index}\n                style={{\n                  width: `${proportion}%`,\n                  fontSize: height - height / 3\n                }}\n              >\n                {capitalize(section.caption)}\n              </div>\n            )\n          })}\n      </div>\n    </div>\n  )\n}\n"],"names":["isNumber","data","getSectionValue","section","value","getSectionColor","undefined","color","isBarDataValues","arr","Array","isArray","every","elt","toPx","size","capitalize","s","charAt","toUpperCase","slice","sumSectionArray","sectionArray","length","map","reduce","a","b","MonoStackedBar","colors","displayLabels","labelColor","unit","width","height","radius","sumValues","React","style","maxWidth","className","styles","stackedBar","index","radiusPx","proportion","key","borderRadius","backgroundColor","display","alignItems","fontSize","sectionLabel","Math","round","caption","filter","Fragment"],"mappings":"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"}